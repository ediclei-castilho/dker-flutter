version: 2.1
defaults: &defaults
  environment:
    PROJECT_TEST: odroidfeeder
    JS_SCRIPT_PATH: _scripts
    DELIVERED_APP_PATH: odroidfeeder/build/app/outputs/apk/release
    GITHUB_EMAIL: rodolfotiago@gmail.com
    GITHUB_USER_NAME: rodolfotiago
only-releasable: &only-releasable
  filters:
    branches:
      only:
        - master
        - develop
        - patch
non-releasable: &non-releasable
  filters:
    branches:
      ignore:
        - master
        - develop
        - patch

jobs:
  test:
    <<: *defaults
    docker:
      - image: rodolfoneto/dker-flutter:latest
    working_directory: ~/PROJECT_TEST
    steps:
      - checkout
      - run:
          name: "Flutter Test"
          command: |
            export
            cd $PROJECT_TEST
            flutter test

  build-dev:
    <<: *defaults
    docker:
      - image: rodolfoneto/dker-flutter:latest
    working_directory: ~/PROJECT_TEST
    steps:
      - checkout
      - run:
          name: "Build to Dev"
          command: |
            cd $PROJECT_TEST
            flutter build apk --build-name=0.0.0-build-${CIRCLE_BUILD_NUM} --build-number=${CIRCLE_BUILD_NUM}

      - store_artifacts:
          path: odroidfeeder/build/app/outputs/apk/release/app-release.apk
          destination: apk-dev
      - persist_to_workspace:
          root: odroidfeeder/build/app/outputs/apk/release
          paths:
            - app-release.apk

  prepare-deploy:
    <<: *defaults
    docker:
      - image: rodolfoneto/dker-flutter:latest
    working_directory: ~/PROJECT_TEST
    steps:
      - add_ssh_keys:
          fingerprints:
            - "15:57:cd:30:2c:b6:f3:16:7b:db:9b:fc:12:95:4a:1e"
      - checkout
      - run:
          name: "Prepare to Deploy to UAT"
          command: |
            cd $PROJECT_TEST
            flutter build apk

            git branch
            git_tag=$(cat pubspec.yaml | grep ^version | awk '{sub(/\+[0-9].*/, "", $2);print $2}')
            #git_tag=$(git tag --sort=committerdate | tail -1 | sed 's/^v//' | cut -d'-' -f1)
            arr=( ${git_tag//./ } )
            new_tag=""
            
            if [[ "${CIRCLE_BRANCH}" == "patch" ]];
            then
              ((++arr[2]))
              new_tag=$(echo "${arr[0]}.${arr[1]}.${arr[2]}")
            elif [[ "${CIRCLE_BRANCH}" == "develop" ]];
            then
              ((++arr[1]))
              arr[2]=0
              new_tag=$(echo "${arr[0]}.${arr[1]}.${arr[2]}")
            else
              ((++arr[0]))
              arr[1]=0
              arr[2]=0
              new_tag=$(echo "${arr[0]}.${arr[1]}.${arr[2]}")
            fi
            if [[ ! -z $new_tag ]];
            then
              sed "s/^version:\ [0-9].*\.[0-9].*\.[0-9].*+[0-9].*/version:\ ${new_tag}+${CIRCLE_BUILD_NUM}/" pubspec.yaml -i
              bash ../_scripts/git_setup.sh $GITHUB_EMAIL $GITHUB_USER_NAME
              if [[ "${arr[1]}" == "0" && "${arr[0]}" == "0" ]];
              then
                commit_message="${git_tag}-build-${CIRCLE_BUILD_NUM}-alpha"
              elif [[ "${arr[1]}" != "0" && "${arr[0]}" == "0" ]];
              then
                commit_message="${git_tag}-build-${CIRCLE_BUILD_NUM}-beta"
              else
                commit_message="${git_tag}"
              fi
              git add .
              git commit -m "[skip ci] new tag on pubspec.yaml - version ${new_tag}+${CIRCLE_BUILD_NUM}"
              git tag v${commit_message}
              git push origin --tags
              git push origin $CIRCLE_BRANCH
            else
              echo "Essa build não vai gerar tag nova"
            fi
            
      - store_artifacts:
          path: odroidfeeder/build/app/outputs/apk/release/app-release.apk
          destination: apk
      - persist_to_workspace:
          root: odroidfeeder/build/app/outputs/apk/release
          paths:
            - app-release.apk

  deploy-dev:
    <<: *defaults
    docker:
      - image: node
    working_directory: ~/PROJECT_TEST
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace-dev
      - run:
          name: "Deploy to Dev"
          command: |
              #incrementar versão corretamente
              npm install request
              node $JS_SCRIPT_PATH/upload-app.js /tmp/workspace-dev/app-release.apk app-release.apk

  deploy-uat:
    <<: *defaults
    docker:
      - image: node
    working_directory: ~/PROJECT_TEST
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: "Deploy to UAT"
          command: |
              npm install request
              node $JS_SCRIPT_PATH/upload-app.js /tmp/workspace/app-release.apk app-release.apk
            
workflows:
  version: 2.1
  
  flutter_workflow:
    jobs:
      - test
      - build-dev:
          <<: *non-releasable
          requires:
            - test
      - prepare-deploy:
          <<: *only-releasable
          requires:
            - test
      - deploy-dev:
          <<: *non-releasable
          requires:
            - build-dev
      - deploy-uat:
          <<: *only-releasable
          requires:
            - prepare-deploy
